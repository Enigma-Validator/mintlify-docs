{
  "openapi": "3.1.0",
  "info": {
    "title": "Hypedexer WebSocket API (EU region)",
    "version": "1.0.0",
    "description": "Realtime WebSocket stream for live trading data from Hypedexer.\n\n**Base URL:** `wss://api-eu.hypedexer.com/ws`\n\nAuthenticate using your API key from the dashboard:\n```\nX-API-Key: <your_api_key>\n```\n\nOnce connected, send JSON messages to subscribe or unsubscribe from different data streams.\n\nKeys work across all regions (Japan & Europe)."
  },
  "servers": [
    { "url": "wss://api-eu.hypedexer.com/ws", "description": "Europe region (WebSocket)" }
  ],
  "tags": [
    { "name": "WebSocket", "description": "Realtime subscriptions for trading data" }
  ],
  "paths": {
    "/ws": {
      "get": {
        "tags": ["WebSocket"],
        "summary": "WebSocket connection (subscribe / unsubscribe)",
        "description": "Establish a WebSocket connection and manage subscriptions.\n\n### Authentication\nInclude your API key during the handshake:\n```\nX-API-Key: <your_api_key>\n```\n\n### Available subscriptions\n- `completed_trades` — all recent completed trades\n- `completed_trades` with `user` — trades for a specific user\n- `fills_spot` — spot fills stream\n- `recent_activity` — combined recent fills and trades\n\n### Example messages\n**Subscribe:**\n```json\n{ \"method\": \"subscribe\", \"subscription\": { \"type\": \"completed_trades\" } }\n```\n\n**Subscribe (user specific):**\n```json\n{ \"method\": \"subscribe\", \"subscription\": { \"type\": \"completed_trades\", \"user\": \"0x8fcc8f55d7a8cdaee770a9e4112725d4a2c60492\" } }\n```\n\n**Subscribe (spot fills):**\n```json\n{ \"method\": \"subscribe\", \"subscription\": { \"type\": \"fills_spot\" } }\n```\n\n**Subscribe (recent activity):**\n```json\n{ \"method\": \"subscribe\", \"subscription\": { \"type\": \"recent_activity\" } }\n```\n\n**Unsubscribe:**\n```json\n{ \"method\": \"unsubscribe\", \"subscription\": { \"type\": \"completed_trades\" } }\n```\n\nAfter subscribing, the server will send JSON frames with real-time data for each stream.",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": true,
            "description": "Your API key from the Hypedexer dashboard.",
            "schema": { "type": "string", "example": "hl_live_ABCDEF.123456" }
          }
        ],
        "security": [{ "X-API-Key": [] }],
        "responses": {
          "101": { "description": "Switching Protocols (WebSocket established)" },
          "401": { "description": "Unauthorized (invalid or missing API key)" }
        },
        "x-websocket": true,
        "x-codeSamples": [
          {
            "lang": "bash",
            "label": "wscat (replace with your key)",
            "source": "wscat -H \"X-API-Key: <your_api_key>\" -c wss://api-eu.hypedexer.com/ws\n# Example: wscat -H \"X-API-Key: hl_live_fd8a27fffd.1d1b9439ae5c4f89b26506fa\" -c wss://api-eu.hypedexer.com/ws\n# Then paste a subscription, e.g.:\n# {\"method\":\"subscribe\",\"subscription\":{\"type\":\"completed_trades\"}}\n"
          },
          {
            "lang": "javascript",
            "label": "Browser (query param alternative)",
            "source": "const key = '<your_api_key>';\nconst ws = new WebSocket(`wss://api-eu.hypedexer.com/ws`);\nws.onopen = () => {\n  ws.send(JSON.stringify({ method: 'subscribe', subscription: { type: 'fills_spot' } }));\n};\nws.onmessage = (e) => console.log(JSON.parse(e.data));\n"
          },
          {
            "lang": "javascript",
            "label": "Node.js (headers)",
            "source": "import WebSocket from 'ws';\nconst ws = new WebSocket('wss://api-eu.hypedexer.com/ws', { headers: { 'X-API-Key': '<your_api_key>' } });\nws.on('open', () => ws.send(JSON.stringify({ method: 'subscribe', subscription: { type: 'recent_activity' } })));\nws.on('message', msg => console.log(JSON.parse(msg.toString())));\n"
          },
          {
            "lang": "python",
            "label": "Python (headers)",
            "source": "import asyncio, json, websockets\nasync def main():\n    url = 'wss://api-eu.hypedexer.com/ws'\n    async with websockets.connect(url, extra_headers={'X-API-Key': '<your_api_key>'}) as ws:\n        await ws.send(json.dumps({ 'method': 'subscribe', 'subscription': { 'type': 'completed_trades' } }))\n        async for msg in ws:\n            print(json.loads(msg))\nasyncio.run(main())\n"
          }
        ],
        "x-examples": {
          "clientMessages": [
            { "method": "subscribe", "subscription": { "type": "completed_trades" } },
            { "method": "subscribe", "subscription": { "type": "completed_trades", "user": "0x8fcc8f55d7a8cdaee770a9e4112725d4a2c60492" } },
            { "method": "subscribe", "subscription": { "type": "fills_spot" } },
            { "method": "subscribe", "subscription": { "type": "recent_activity" } },
            { "method": "unsubscribe", "subscription": { "type": "completed_trades" } }
          ],
          "serverEvents": [
            {
              "type": "completed_trades",
              "count": 1,
              "data": [
                { "trade_id": "t1", "created_at": "2025-10-08T14:35:21.123Z", "market": "BTC-PERP", "price": 68500.5, "size": 0.01, "side": "B" }
              ]
            },
            {
              "type": "fills_spot",
              "count": 1,
              "data": [
                { "fill_id": "f1", "time_dt": "2025-10-08T14:35:50.000Z", "market": "ETH-USDT", "price": 1800.0, "size": 0.5, "side": "A" }
              ]
            },
            {
              "type": "recent_activity",
              "count": 2,
              "data": [
                { "stream": "completed_trades", "trade_id": "t3", "created_at": "2025-10-08T14:37:00Z" },
                { "stream": "fills_spot", "fill_id": "f2", "time_dt": "2025-10-08T14:37:05Z" }
              ]
            },
            { "type": "error", "message": "invalid subscription" }
          ],
          "cli": {
            "wscat": "wscat -H \"X-API-Key: <your_api_key>\" -c wss://api-eu.hypedexer.com/ws\n# Example (your provided test):\n# wscat -H \"X-API-Key: hl_live_fd8a27fffd.1d1b9439ae5c4f89b26506fa\" -c wss://api-eu.hypedexer.com/ws"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "X-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "Your Hypedexer API key. Generate it at https://www.app.hypedexer.com/dashboard/keys."
      }
    },
    "schemas": {
      "WsSubscription": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Subscription stream type.",
            "enum": ["completed_trades", "fills_spot", "recent_activity", "completed_trades_user"]
          },
          "user": {
            "type": "string",
            "description": "Required when `type` is `completed_trades_user`.",
            "example": "0x8fcc8f55d7a8cdaee770a9e4112725d4a2c60492"
          }
        },
        "required": ["type"]
      },
      "WsClientMessageSubscribe": {
        "type": "object",
        "properties": {
          "method": { "type": "string", "const": "subscribe" },
          "subscription": { "$ref": "#/components/schemas/WsSubscription" }
        },
        "required": ["method", "subscription"]
      },
      "WsClientMessageUnsubscribe": {
        "type": "object",
        "properties": {
          "method": { "type": "string", "const": "unsubscribe" },
          "subscription": { "$ref": "#/components/schemas/WsSubscription" }
        },
        "required": ["method", "subscription"]
      },
      "WsClientMessage": {
        "oneOf": [
          { "$ref": "#/components/schemas/WsClientMessageSubscribe" },
          { "$ref": "#/components/schemas/WsClientMessageUnsubscribe" }
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "subscribe": "#/components/schemas/WsClientMessageSubscribe",
            "unsubscribe": "#/components/schemas/WsClientMessageUnsubscribe"
          }
        }
      }
    }
  },
  "security": [{ "X-API-Key": [] }]
}
